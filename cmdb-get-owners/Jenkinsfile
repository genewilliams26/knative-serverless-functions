pipeline {
    agent {
        kubernetes {yamlFile 'build-environment.yaml'}
    }
    
    environment {
        IMAGE_NAME = 'docker.repo.<domain-name>/org/ia/faas/cmdb-get-owners'
    }

    stages {

        stage('Image Build/Push') {
            environment {
                ARTIFACT_REPOSITORY_CREDS = credentials('JENKINS_SERVICE_ACCOUNT')
            }

            steps {
                container('buildah') {
                    sh '''
                        hadolint --no-color --no-fail --format json --require-label maintainer --require-label projectId Dockerfile >> hadolint-results.json
                        buildah bud --format=docker --pull-always --no-cache --creds ${ARTIFACT_REPOSITORY_CREDS_USR}:${ARTIFACT_REPOSITORY_CREDS_PSW} --tag ${IMAGE_NAME}:${VERSION} --tag ${IMAGE_NAME}:${GIT_COMMIT} .
                        buildah push --creds ${ARTIFACT_REPOSITORY_CREDS_USR}:${ARTIFACT_REPOSITORY_CREDS_PSW} ${IMAGE_NAME}:1.0.29
                        buildah push --creds ${ARTIFACT_REPOSITORY_CREDS_USR}:${ARTIFACT_REPOSITORY_CREDS_PSW} ${IMAGE_NAME}:${GIT_COMMIT}
                       '''
                }
            }
        }

        stage('Static Analysis') {
            steps {
                recordIssues enabledForFailure: true, tools: [hadoLint(pattern: 'hadolint-results.json')]
            }
        }

    }

    post {
        always {
            emailext (
                subject: "Jenkins Job Notification '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: "Check console output at ${env.BUILD_URL}",
                attachLog: true,
                recipientProviders: [buildUser(), developers(), requestor(), culprits()]
            )
        }
    }
}
